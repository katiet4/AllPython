#[(i*100)/255]
from functionsOFLerningNN import *

X1 =[[1],[0],[0],
     [1],[1],[1],
     [1],[0],[0],
     [0],[0],[0]]
T1 = [1,1]
X2 =[[0],[1],[1],
     [0],[0],[1],
     [1],[0],[0],
     [0],[0],[0]]
T2 = [1,1]
X3 =[[1],[0],[0],
     [1],[0],[1],
     [1],[0],[0],
     [0],[0],[0]]
T3 = [1,1]
X4 =[[0],[0],[0],
     [0],[0],[1],
     [1],[0],[1],
     [0],[0],[1]]
T4 = [0,0]
X5 =[[0],[0],[0],
     [0],[0],[1],
     [1],[0],[0],
     [1],[1],[0]]
T5 = [0,0]
X6 =[[0],[0],[0],
     [0],[1],[1],
     [1],[1],[1],
     [0],[0],[1]]
T6 = [0,0]


W1_2 = [[-0.47821433996183654, -0.053663161062622325, -0.5077706036124615, -0.7557260568773249, 0.27572071812370064, -0.4000406369156984,
 -0.4734517707474653, 0.8025389293970776, 1.0142437251165901, 1.0191849349935045, 1.0658681231624478, 1.3487989446906214],
  [-0.6526930226317026, -0.08070549976951465, -0.8418655109511396, -0.7843888463430377, 0.2602322668022391, -0.3732445440070997,
   -0.3148666439570509, 0.8711216944526149, 0.7619284941069284, 0.9771503803735099, 1.1054659385431358, 1.1842812107251768], 
   [-0.19955350161147156, -0.7680498576648831, -0.17847256149050153, -1.0646523483768588, -0.21746510987228224, -0.6723552202699289,
    0.113822785833096, 0.37771059105442883, 1.4181445164232034, 1.5480871011082404, 0.6132226768483622, 0.8581563050732742], 
    [1.514500358534727, 1.3484488031370374, 1.5963855714592468, 1.6940519565905785, 0.1591640092450224, -0.025219698390382496,
     -0.30963253322394557, -0.4270743490603569, -1.221291728863444, -1.273250573534392, -0.6540263434343317, -1.2681738610001516]]

W2_3 = [[-1.607449203918965, -0.7657867849223936, -0.8368795962957254, 1.5052625052083555], [-1.2142691254266027, -1.5660612960587996, -1.7157713950964015,
 3.504197656958527],
 [-0.5469186204913766, -0.33387764701608147, -1.2565967115002006, 0.9536051711655503], [1.3248802539573286, 1.728256008227919, 1.3674167517372506, -3.3698103599159257]]
W3_4 = [[1.6219128627210413, 2.152342815073759, 0.7717932223293372, -3.5010154243378455], [1.3905091285199216, 2.5115437302552133, 0.45662465616567616, -3.4222700557201513]]
index = 0
E = 0.7
A = 0.3
deltaW3_4 = [[0 for p in range(len(W3_4[0]))] for i in range(len(W3_4))]
deltaW2_3 = [[0 for p in range(len(W2_3[0]))] for i in range(len(W2_3))]
deltaW1_2 = [[0 for p in range(len(W1_2[0]))] for i in range(len(W1_2))]
more = 0
i = 0
while more < 500:
  if index == 0:
    X = X6.copy()
    T = T6.copy()
    index += 1
  elif index == 1:
    X = X2.copy()
    T = T2.copy()
    index += 1
  elif index == 2:
    X = X3.copy()
    T = T3.copy()
    index += 1
  elif index == 3:
    X = X4.copy()
    T = T4.copy()
    index += 1
  elif index == 4:
    X = X5.copy()
    T = T5.copy()
    index += 1
  elif index == 5:
    X = X6.copy()
    T = T6.copy()
    index = 0
  else:
    X = X1.copy()
    while X == X1 or X == X2 or  X == X3 or X == X4 or X == X5 or X == X6:
      for i in range(len(X1)):
        for r in range(len(X1[0])):
          X[i][r] += randint(0,1)
    T = [1,0]
    index = 0
  howlong = True
  L2 = matmult(W1_2,X)
  print("L2: " + str(L2))
  
  L3 = matmult(W2_3,L2)
  print("L3: " + str(L3))

  O = matmult(W3_4,L3)
  print("O: " + str(O))
  print("T: " + str(T))
  break
  # learning

  Oe = table_errors(O,T)
  for r in range(len(O)):
    if T[r]> O[r][0]:
      s = T[r] - O[r][0]
    else:
      s = O[r][0] - T[r]
    print(s)
    if s > 0.1:
      howlong = False
      break
  print("----")
  if howlong:
    more += 1
  else:
    more = 0
  #print("Oe: " + str(Oe))
  #def learning(Li,e,Wi_j,what,E,A,deltaWi_j):

  Hd2 = learning(L3,Oe,W3_4,"3_4",E,A,deltaW3_4)
  Hd3 = learning(L2,Hd2,W2_3,"2_3",E,A,deltaW2_3)
  learning(X,Hd3,W1_2,"1_2",E,A,deltaW1_2)
  # print("w3_4: "+str(deltaW3_4))
#print("W7_8: " + str(W7_8))
#print("W6_7: " + str(W6_7))
#print("W5_6: " + str(W5_6))
#print("W4_5: " + str(W4_5))
#print("W3_4: " + str(W3_4))
#print("W2_3: " + str(W2_3))
#print("W1_2: " + str(W1_2))

with open("log9.txt",'w') as write:
 print(str(W1_2) +"|" + str(W2_3) +"|"
   + str(W3_4),file = write)